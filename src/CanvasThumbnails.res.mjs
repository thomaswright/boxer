// Generated by ReScript, PLEASE EDIT WITH CARE

import * as BoardPreview from "./BoardPreview.res.mjs";
import * as Tb from "react-icons/tb";
import * as JsxRuntime from "react/jsx-runtime";

function CanvasThumbnails(props) {
  let isMouseDown = props.isMouseDown;
  let handleSelectCanvas = props.handleSelectCanvas;
  let handleAddCanvas = props.handleAddCanvas;
  let handleDeleteCanvas = props.handleDeleteCanvas;
  let canDeleteCanvas = props.canDeleteCanvas;
  let currentCanvasId = props.currentCanvasId;
  return JsxRuntime.jsxs("div", {
    children: [
      props.canvases.map(canvas => {
        let canvasBoard = canvas.board;
        let isSelectedCanvas = canvas.id === currentCanvasId;
        return JsxRuntime.jsxs("div", {
          children: [
            JsxRuntime.jsx("button", {
              children: JsxRuntime.jsx("div", {
                children: JsxRuntime.jsx(BoardPreview.make, {
                  board: canvasBoard,
                  emptyColor: undefined,
                  isMouseDown: isMouseDown
                }),
                className: "h-16 w-16 rounded-xs overflow-hidden"
              }),
              className: [" w-fit h-fit block"].join(" "),
              onClick: param => handleSelectCanvas(canvas.id)
            }),
            isSelectedCanvas ? JsxRuntime.jsx("button", {
                children: JsxRuntime.jsx(Tb.TbTrash, {}),
                className: [
                  " w-4 h-4 leading-none text-sm font-medium absolute right-0 bottom-0 flex items-center justify-center",
                  canDeleteCanvas ? "bg-gray-700 text-white" : "bg-gray-200 text-gray-500 cursor-not-allowed"
                ].join(" "),
                disabled: !canDeleteCanvas,
                onClick: e => {
                  e.stopPropagation();
                  handleDeleteCanvas();
                }
              }) : null
          ],
          className: [
            "relative flex-shrink-0 border-2 w-fit h-fit",
            isSelectedCanvas ? "border-blue-500" : "border-gray-200"
          ].join(" ")
        }, canvas.id);
      }),
      JsxRuntime.jsx("button", {
        children: JsxRuntime.jsx(Tb.TbPlus, {}),
        className: "flex-shrink-0 h-16 w-16 border-2 border-dashed border-gray-300 flex items-center justify-center text-3xl text-gray-400",
        onClick: param => handleAddCanvas()
      })
    ],
    className: "flex flex-row items-start gap-3 overflow-x-scroll p-2 pl-0"
  });
}

let make = CanvasThumbnails;

export {
  make,
}
/* BoardPreview Not a pure module */
