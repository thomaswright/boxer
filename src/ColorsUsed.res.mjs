// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_dict from "rescript/lib/es6/Js_dict.js";
import * as Primitive_int from "rescript/lib/es6/Primitive_int.js";
import * as Primitive_string from "rescript/lib/es6/Primitive_string.js";
import * as JsxRuntime from "react/jsx-runtime";

function ColorsUsed(props) {
  let colorCounts = {};
  let totalColored = {
    contents: 0
  };
  props.board.forEach(row => {
    row.forEach(cell => {
      if (cell == null) {
        return;
      }
      totalColored.contents = totalColored.contents + 1 | 0;
      let count = Js_dict.get(colorCounts, cell);
      let nextCount = count !== undefined ? count + 1 | 0 : 1;
      colorCounts[cell] = nextCount;
    });
  });
  let totalColoredCells = totalColored.contents;
  let usages = Js_dict.entries(colorCounts).map(param => {
    let count = param[1];
    let percent = totalColoredCells === 0 ? 0 : count / totalColoredCells * 100;
    return {
      color: param[0],
      count: count,
      percent: percent
    };
  }).toSorted((a, b) => {
    let other = Primitive_int.compare(b.count, a.count);
    if (other !== 0) {
      return other;
    } else {
      return Primitive_string.compare(a.color, b.color);
    }
  });
  let uniqueColorCount = usages.length;
  let match = usages.length;
  return JsxRuntime.jsxs("div", {
    children: [
      JsxRuntime.jsxs("div", {
        children: [
          JsxRuntime.jsx("span", {
            children: "Colors Used",
            className: "font-medium"
          }),
          JsxRuntime.jsx("span", {
            children: uniqueColorCount.toString(),
            className: "text-xs text-gray-500"
          })
        ],
        className: "flex flex-row items-center justify-between"
      }),
      match !== 0 ? JsxRuntime.jsx("div", {
          children: usages.map(param => {
            let color = param.color;
            let percentLabel = param.percent.toFixed(1);
            return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("div", {
                  className: "w-4 h-4 rounded border border-gray-300",
                  style: {
                    backgroundColor: color
                  }
                }),
                JsxRuntime.jsx("div", {
                  children: color,
                  className: "flex-1 font-mono truncate"
                }),
                JsxRuntime.jsx("div", {
                  children: percentLabel + "%",
                  className: "text-xs text-gray-500 tabular-nums"
                }),
                JsxRuntime.jsx("div", {
                  children: param.count.toString(),
                  className: "text-xs text-gray-400 w-8 text-right tabular-nums"
                })
              ],
              className: "flex flex-row items-center gap-2 text-xs"
            }, color);
          }),
          className: "flex flex-col gap-1"
        }) : JsxRuntime.jsx("div", {
          children: "Start drawing to see colors",
          className: "text-xs text-gray-500"
        })
    ],
    className: "p-2 flex flex-col gap-2 w-full"
  });
}

let make = ColorsUsed;

export {
  make,
}
/* react/jsx-runtime Not a pure module */
