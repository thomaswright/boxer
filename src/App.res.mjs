// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Stdlib_Option from "rescript/lib/es6/Stdlib_Option.js";
import * as JsxRuntime from "react/jsx-runtime";
import UseLocalStorageJs from "./useLocalStorage.js";

let defaultBoard = [
  [
    undefined,
    undefined,
    undefined,
    undefined
  ],
  [
    undefined,
    undefined,
    undefined,
    undefined
  ],
  [
    undefined,
    undefined,
    undefined,
    undefined
  ],
  [
    undefined,
    undefined,
    undefined,
    undefined
  ]
];

function App(props) {
  let match = UseLocalStorageJs("board", defaultBoard);
  let setBoard = match[1];
  let board = match[0];
  let width = board.length;
  let height = Stdlib_Option.mapOr(board[0], 0, line => line.length);
  console.log(width, height);
  let match$1 = React.useState(() => false);
  let setMaskOff = match$1[1];
  let maskOff = match$1[0];
  let onMouseMove = param => setMaskOff(param => false);
  React.useEffect(() => {
    window.addEventListener("mousemove", onMouseMove);
  }, []);
  return JsxRuntime.jsx("div", {
    children: JsxRuntime.jsx("div", {
      children: board.map((line, i) => line.map((cell, j) => {
        let backgroundColor = Stdlib_Option.getOr(cell, "#f00");
        return JsxRuntime.jsxs("div", {
          children: [
            JsxRuntime.jsx("div", {
              className: "w-full h-full absolute",
              style: {
                backgroundColor: backgroundColor
              }
            }),
            maskOff ? null : JsxRuntime.jsx("div", {
                className: "absolute w-full h-full inset-0 bg-gray-400 opacity-0 group-hover:opacity-50 "
              })
          ],
          className: "w-full h-full group relative",
          onClick: param => {
            setBoard(b => {
              let f = param => "#0f0";
              return b.map((row, rowI) => {
                if (rowI === i) {
                  return row.map((cell, cellJ) => {
                    if (cellJ === j) {
                      return f(cell);
                    } else {
                      return cell;
                    }
                  });
                } else {
                  return row;
                }
              });
            });
            setMaskOff(param => true);
          }
        }, i.toString() + j.toString());
      })),
      style: {
        display: "grid",
        gridTemplateColumns: "repeat(" + width.toString() + ", 3rem)",
        gridTemplateRows: "repeat(" + height.toString() + ", 3rem)"
      }
    }),
    className: "m-5 border "
  });
}

let make = App;

export {
  make,
}
/* react Not a pure module */
