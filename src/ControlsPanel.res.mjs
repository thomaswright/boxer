// Generated by ReScript, PLEASE EDIT WITH CARE

import * as ZoomControl from "./ZoomControl.res.mjs";
import * as ColorControl from "./ColorControl.res.mjs";
import * as ExportControl from "./ExportControl.res.mjs";
import * as CanvasSizeControl from "./CanvasSizeControl.res.mjs";
import * as SilhouetteControl from "./SilhouetteControl.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as BrushOverlayControl from "./BrushOverlayControl.res.mjs";
import * as CanvasColorsControl from "./CanvasColorsControl.res.mjs";

function ControlsPanel(props) {
  let myColor = props.myColor;
  return JsxRuntime.jsxs("div", {
    children: [
      JsxRuntime.jsx(ColorControl.make, {
        brushMode: props.brushMode,
        setBrushMode: props.setBrushMode,
        myColor: myColor,
        setMyColor: props.setMyColor,
        isPickingColor: props.isPickingColor,
        onStartColorPick: props.onStartColorPick
      }),
      JsxRuntime.jsxs("div", {
        children: [
          JsxRuntime.jsx(CanvasColorsControl.make, {
            myColor: myColor,
            canvasBackgroundColor: props.canvasBackgroundColor,
            setCanvasBackgroundColor: props.setCanvasBackgroundColor,
            viewportBackgroundColor: props.viewportBackgroundColor,
            setViewportBackgroundColor: props.setViewportBackgroundColor
          }),
          JsxRuntime.jsx(ZoomControl.make, {
            onZoomOut: props.onZoomOut,
            onZoomReset: props.onZoomReset,
            onZoomIn: props.onZoomIn,
            onCenterCanvas: props.onCenterCanvas,
            onFitCanvas: props.onFitCanvas,
            zoom: props.zoom
          }),
          JsxRuntime.jsx(SilhouetteControl.make, {
            isSilhouette: props.isSilhouette,
            setIsSilhouette: props.setIsSilhouette
          }),
          JsxRuntime.jsx(ExportControl.make, {
            exportScaleInput: props.exportScaleInput,
            setExportScaleInput: props.setExportScaleInput,
            includeBackground: props.includeExportBackground,
            setIncludeBackground: props.setIncludeExportBackground,
            canExport: props.canExport,
            onExport: props.onExport
          }),
          JsxRuntime.jsx(CanvasSizeControl.make, {
            resizeRowsInput: props.resizeRowsInput,
            setResizeRowsInput: props.setResizeRowsInput,
            resizeColsInput: props.resizeColsInput,
            setResizeColsInput: props.setResizeColsInput,
            resizeMode: props.resizeMode,
            setResizeMode: props.setResizeMode,
            canSubmitResize: props.canSubmitResize,
            onSubmitResize: props.onSubmitResize
          }),
          JsxRuntime.jsx(BrushOverlayControl.make, {
            showCursorOverlay: props.showCursorOverlay,
            setShowCursorOverlay: props.setShowCursorOverlay
          })
        ],
        className: "overflow-y-scroll flex-1 flex flex-col py-2 divide-y divide-gray-300"
      })
    ],
    className: " h-full overflow-x-visible flex flex-col w-48 py-2"
  });
}

let make = ControlsPanel;

export {
  make,
}
/* ZoomControl Not a pure module */
